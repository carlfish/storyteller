{
  "openapi": "3.1.0",
  "info": {
    "title": "Storyteller API",
    "version": "0.1.0"
  },
  "paths": {
    "/stories": {
      "get": {
        "summary": "List Stories",
        "description": "List all stories for the current user",
        "operationId": "list_stories_stories_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/StoryIndex"
                  },
                  "type": "array",
                  "title": "Response List Stories Stories Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Story",
        "description": "Create a new story and return redirect to its UUID endpoint",
        "operationId": "create_story_stories_post",
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedStory"
                }
              }
            }
          }
        }
      }
    },
    "/characters/generate": {
      "post": {
        "summary": "Generate Characters",
        "description": "Generate characters for a story",
        "operationId": "generate_characters_characters_generate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateCharactersRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Characters"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/stories/{story_uuid}": {
      "get": {
        "summary": "Get Story",
        "description": "Get the full story state",
        "operationId": "get_story_stories__story_uuid__get",
        "parameters": [
          {
            "name": "story_uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Story Uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Story"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Execute Command",
        "description": "Execute a command on the story",
        "operationId": "execute_command_stories__story_uuid__post",
        "parameters": [
          {
            "name": "story_uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Story Uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommandRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BaseMessage": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "additionalProperties": true,
                      "type": "object"
                    }
                  ]
                },
                "type": "array"
              }
            ],
            "title": "Content"
          },
          "additional_kwargs": {
            "additionalProperties": true,
            "type": "object",
            "title": "Additional Kwargs"
          },
          "response_metadata": {
            "additionalProperties": true,
            "type": "object",
            "title": "Response Metadata"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "content",
          "type"
        ],
        "title": "BaseMessage",
        "description": "Base abstract message class.\n\nMessages are the inputs and outputs of ChatModels."
      },
      "Chapter": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "summary": {
            "type": "string",
            "title": "Summary"
          }
        },
        "type": "object",
        "required": [
          "title",
          "summary"
        ],
        "title": "Chapter"
      },
      "Character": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "role": {
            "type": "string",
            "title": "Role"
          },
          "bio": {
            "type": "string",
            "title": "Bio"
          }
        },
        "type": "object",
        "required": [
          "name",
          "role",
          "bio"
        ],
        "title": "Character"
      },
      "Characters": {
        "properties": {
          "characters": {
            "items": {
              "$ref": "#/components/schemas/Character"
            },
            "type": "array",
            "title": "Characters"
          }
        },
        "type": "object",
        "required": [
          "characters"
        ],
        "title": "Characters",
        "description": "Wrapper for a list of characters, used as\nstructured output for the character summary\nprompt."
      },
      "CommandRequest": {
        "properties": {
          "command": {
            "type": "string",
            "title": "Command"
          },
          "body": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Body"
          }
        },
        "type": "object",
        "required": [
          "command"
        ],
        "title": "CommandRequest"
      },
      "CommandResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "messages": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Messages"
          }
        },
        "type": "object",
        "required": [
          "status",
          "messages"
        ],
        "title": "CommandResponse"
      },
      "CreatedStory": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title",
            "default": "New Story"
          },
          "characters": {
            "items": {
              "$ref": "#/components/schemas/Character"
            },
            "type": "array",
            "title": "Characters"
          },
          "chapters": {
            "items": {
              "$ref": "#/components/schemas/Chapter"
            },
            "type": "array",
            "title": "Chapters"
          },
          "scenes": {
            "items": {
              "$ref": "#/components/schemas/Scene"
            },
            "type": "array",
            "title": "Scenes"
          },
          "old_messages": {
            "items": {
              "$ref": "#/components/schemas/BaseMessage"
            },
            "type": "array",
            "title": "Old Messages"
          },
          "current_messages": {
            "items": {
              "$ref": "#/components/schemas/BaseMessage"
            },
            "type": "array",
            "title": "Current Messages"
          },
          "story_id": {
            "type": "string",
            "title": "Story Id"
          }
        },
        "type": "object",
        "required": [
          "characters",
          "chapters",
          "scenes",
          "old_messages",
          "current_messages",
          "story_id"
        ],
        "title": "CreatedStory"
      },
      "GenerateCharactersRequest": {
        "properties": {
          "prompt": {
            "type": "string",
            "title": "Prompt"
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "GenerateCharactersRequest"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Scene": {
        "properties": {
          "time_and_location": {
            "type": "string",
            "title": "Time And Location"
          },
          "events": {
            "type": "string",
            "title": "Events"
          }
        },
        "type": "object",
        "required": [
          "time_and_location",
          "events"
        ],
        "title": "Scene"
      },
      "Story": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title",
            "default": "New Story"
          },
          "characters": {
            "items": {
              "$ref": "#/components/schemas/Character"
            },
            "type": "array",
            "title": "Characters"
          },
          "chapters": {
            "items": {
              "$ref": "#/components/schemas/Chapter"
            },
            "type": "array",
            "title": "Chapters"
          },
          "scenes": {
            "items": {
              "$ref": "#/components/schemas/Scene"
            },
            "type": "array",
            "title": "Scenes"
          },
          "old_messages": {
            "items": {
              "$ref": "#/components/schemas/BaseMessage"
            },
            "type": "array",
            "title": "Old Messages"
          },
          "current_messages": {
            "items": {
              "$ref": "#/components/schemas/BaseMessage"
            },
            "type": "array",
            "title": "Current Messages"
          }
        },
        "type": "object",
        "required": [
          "characters",
          "chapters",
          "scenes",
          "old_messages",
          "current_messages"
        ],
        "title": "Story"
      },
      "StoryIndex": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "chapters": {
            "type": "integer",
            "title": "Chapters"
          },
          "characters": {
            "type": "integer",
            "title": "Characters"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "title": "Created"
          },
          "last_modified": {
            "type": "string",
            "format": "date-time",
            "title": "Last Modified"
          }
        },
        "type": "object",
        "required": [
          "id",
          "title",
          "chapters",
          "characters",
          "created",
          "last_modified"
        ],
        "title": "StoryIndex"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}
